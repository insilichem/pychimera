environment:
  PYTHONDONTWRITEBYTECODE: "1"
  APPVEYOR_SAVE_CACHE_ON_ERROR: "true"
  BINSTAR_TOKEN:
    secure: zW96v77uhbDdArc0805i/CDIvVpZvqCJyJ+WgSE1b65nPLO0nGUwmZ9qshUICIba
  matrix:
    - PYTHON: "C:\\Python27_64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      CONDA_PY: "27"
      CONDA_NPY: "111"
      CHIMERA_VERSION: "1.13.1"
      CHIMERADIR: "C:\\Python27_64\\Library\\Chimera_1.13.1"


matrix:
  fast_finish: true

cache:
  - '%PYTHON%'

install:
  # this installs the appropriate Miniconda (Py2/Py3, 32/64 bit),
  # as well as pip, conda-build
  - ps: if (!(Test-Path $env:PYTHON\\Scripts\\conda.exe -PathType Leaf)){ .\\scripts\\install_miniconda.ps1 }
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - "IF NOT EXIST %CHIMERADIR% conda build conda-recipes/ucsf-chimera"
  - "IF NOT EXIST %CHIMERADIR% conda install -y -q -c %PYTHON%/conda-bld ucsf-chimera"
  # Dependencies
  - conda build purge
  - conda build -q --python=2.7 conda-recipes/pychimera --no-test
  # Create specific Python 2 env
  - conda env remove -n pychimera || true
  - conda create -n pychimera --use-local python=2.7 pychimera
  - conda activate pychimera

build: off

test_script:
  - cd tests
  - pytest
  - python pychimeratest.py pychimera_test*
  - cd ..
  - conda deactivate
  - conda activate

deploy_script:
  - ps: If ($env:APPVEYOR_REPO_TAG -eq "true" -And $env:APPVEYOR_REPO_BRANCH -eq "master") { $env:conda_upload = 'true' } Else { write-output "Not on a tag on master, won't deploy to anaconda" }
  - cmd: IF "%conda_upload%"=="true" anaconda -t %BINSTAR_TOKEN% upload %PYTHON%/conda-bld/win-*/pychimera-*.tar.bz2 -u insilichem --no-progress --force