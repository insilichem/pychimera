# Derived from https://github.com/theochem/qcgrids/blob/master/.travis.yml
env:
  matrix:
  - MYCONDAPY=2.7

####
# EVERYTHING BELOW THIS LINE WILL BE COPIED INTO OTHER YMLs
####

# Do not use Travis Python to save some time.
language: generic
os:
- linux
- osx
dist: trusty
sudo: false

matrix:
  # We only test on Linux with one specific Python version, unless we make a release. All
  # other cases are allowed to fail and will exit early. With the fast_finish option,
  # travis will send a status update to github as soon as the non-allowed-to-fail has
  # finished. This speeds up testing in PRs.
  #
  # This is not ideal. It would be better to run just one item from the build matrix when
  # not preparing a release. This is not possible on Travis. There are several tickets on
  # travis-ci related to this limitation.
  #
  #    https://github.com/travis-ci/travis-ci/issues/7451
  #    https://github.com/travis-ci/travis-ci/issues/7149
  #    https://github.com/travis-ci/travis-ci/issues/2778
  #    ...
  fast_finish: true

cache:
  directories:
  - $HOME/download
  - $HOME/miniconda
  - $HOME/chimera

before_cache:
- conda deactivate || true
- conda env remove -n pychimera
- if [[ ! $TRAVIS_TAG ]]; then rm -rf $HOME/miniconda/conda-bld; fi
- rm -rf $HOME/miniconda/locks $HOME/miniconda/pkgs $HOME/miniconda/var $HOME/miniconda/conda-meta/history

branches:
  only:
  - master
  - /^v?[0-9]+\.[0-9]+(\.[0-9]+)?([abc][0-9]*)?$/  # release branches

before_install:
# Check if UCSF Chimera is present and install it if needed
- if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
    if [[ ! -e $HOME/chimera/bin/chimera ]]; then
      bash scripts/install_chimera.sh
    fi;
    export CHIMERADIR="$HOME/chimera";
  else
    if [[ ! -e $HOME/chimera/Chimera.app/Contents/Resources/bin/chimera ]]; then
      bash scripts/install_chimera.sh
    fi;
    export CHIMERADIR="$HOME/chimera/Chimera.app/Contents/Resources";
  fi
# Get miniconda. Take the right version, so re-installing python is hopefully not needed.
- if test -e $HOME/miniconda/bin; then
    echo "miniconda already installed.";
  else
    echo "Installing miniconda.";
    rm -rf $HOME/miniconda;
    mkdir -p $HOME/download;
    if [[ -d $HOME/download/miniconda.sh ]]; then rm -rf $HOME/download/miniconda.sh; fi;
    if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O $HOME/download/miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O $HOME/download/miniconda.sh;
    fi;
    bash $HOME/download/miniconda.sh -b -p $HOME/miniconda;
  fi
# Configure conda and get a few essentials
- source $HOME/miniconda/etc/profile.d/conda.sh
- conda activate
- conda config --set always_yes yes
- conda config --remove-key channels || true
- conda config --add channels defaults
- conda install -q conda conda-build=3.16
# Show conda info for debugging
- conda info -a
- conda list
- env | sort

install:
# Dependencies
- conda build -q --python=2.7 conda-recipes/pychimera
# Create specific Python 2 env
- conda env remove -n pychimera || true
- conda create -n pychimera --use-local python=2.7 pychimera pytest

script:
- conda activate pychimera
- cd tests
- pytest
- python pychimeratest.py pychimera_test*
- cd ..
- conda deactivate

before_deploy:
- conda activate
- conda install -q anaconda-client

deploy:
  # Deploy to PyPI
  - provider: pypi
    username: jaimergp
    skip_cleanup: true
    password:
      secure: rLTkUZshTVFYbZ79EREfLcl9jwwE0Yy8lmSnmRkka077zs86yaClw+sEKaDdINyjKasC0+9DA2qMKNEHvewKDHfIarA9/ZLfcyTWusiiJrAMF5oqomfQV9gy0Ofso6YDggzzuEbRhCVNeS2BeWczbJ4esUCRTdx+2hIMhcqe6whEHK9nw/M4IvNqoo4vyjS/2H1yOBXstfvRx6NKBFVa8FyLcLE0UDRMAmHg0WGmDgu7ch3H3jyx5tG8dodvoCyVYKMm1aHLvUyHmHnrcw4/zjZhUeeIVY0lMIVDNwQ+5LuceAASEdMGrfkdZWuQOjjUosHUJMs6apIbQ+L8fXyBiPJ2VZ/TAm4RqSSfwfACMoaCLxszIc3yP/kXnKjmvqFdpTVumUuI+kqkd0gk1Ai4HxUZK9unybtIoWtUwT36h4+AFLQw/mL5ekuOQ2MgRA9g/n1f3iwG9T+lEaSoQxq4O7o5DViazi/Y+4gaHYwKGvF78ZrQuzwh2TZZQnbBoafCpyqQGLtYZNvemEwplPf4lEnxI30MXAvpLx8YoF/ooqNoUu90JjgDSSWnfaqXh5E4xhlvYoW3duNzCd1J13ebbiU6rEH8Pw7pDEJrByfSpZp4wisyuyPV3oaygy8d0Md7Ad7lYxurjP1+qHi1lDVLyMFQCa40I9GY5C766hRJZ0Y=
    on:
      tags: true
      condition: "$TRAVIS_OS_NAME = linux"
  # Deploy to Anaconda.org
  - provider: script
    script: anaconda -t $ANACONDA_TOKEN upload -u insilichem $HOME/miniconda/conda-bld/**/pychimera-*.tar.bz2;
    skip_cleanup: true
    on:
      tags: true
